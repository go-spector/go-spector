// This file has been generated by go-spector; DO NOT EDIT.
package schema

import (
	"errors"
	"fmt"
	"regexp"
)

var CustomerKey = &struct{ i int }{}

var customerIDRegex = regexp.MustCompile(`an uuid regex here`)

type Customer struct {
	ID        string `json:"id"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
}

func (c *Customer) Validate() error {
	err := &ValidationError{}

	if c.ID == "" {
		err = err.Append(fmt.Errorf("customer.ID: must not be empty"))
	}

	if !customerIDRegex.MatchString(c.ID) {
		err = err.Append(fmt.Errorf("customer.ID: must be in format `%s`", customerIDRegex.String()))
	}

	if c.FirstName == "" {
		err = err.Append(fmt.Errorf("customer.FirstName: must not be empty"))
	}

	if len(c.FirstName) > 250 {
		err = err.Append(fmt.Errorf("customer.FirstName: must not be more than 250 chars"))
	}

	if c.LastName == "" {
		err = err.Append(fmt.Errorf("customer.LastName: must not be empty"))
	}

	if len(c.LastName) > 250 {
		err = err.Append(fmt.Errorf("customer.LastName: must not be more than 250 chars"))
	}

	if errors.Unwrap(err) != nil {
		return err
	}

	return nil
}
